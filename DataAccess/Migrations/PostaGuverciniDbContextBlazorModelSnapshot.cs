// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(PostaGuverciniDbContextBlazor))]
    partial class PostaGuverciniDbContextBlazorModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.BatchConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchIntervalMinutes")
                        .HasColumnType("int");

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<int>("BulkSmsRequestId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeWindowEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeWindowStart")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BulkSmsRequestId")
                        .IsUnique();

                    b.ToTable("BatchConfigs");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SmsMesages");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BulkSmsRequestId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BulkSmsRequestId");

                    b.ToTable("SmsRecipients");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLastSendDate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("SmsMessageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SmsMessageId");

                    b.ToTable("BulkSmsRequests");
                });

            modelBuilder.Entity("Domain.Entities.BatchConfig", b =>
                {
                    b.HasOne("Domain.Entities.BulkSmsRequest", "BulkSmsRequest")
                        .WithOne("BatchConfig")
                        .HasForeignKey("Domain.Entities.BatchConfig", "BulkSmsRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulkSmsRequest");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsRecipient", b =>
                {
                    b.HasOne("Domain.Entities.BulkSmsRequest", "BulkSmsRequest")
                        .WithMany("Recipients")
                        .HasForeignKey("BulkSmsRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulkSmsRequest");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsRequest", b =>
                {
                    b.HasOne("Domain.Entities.BulkSmsMessage", "SmsMessage")
                        .WithMany("BulkSmsRequests")
                        .HasForeignKey("SmsMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SmsMessage");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsMessage", b =>
                {
                    b.Navigation("BulkSmsRequests");
                });

            modelBuilder.Entity("Domain.Entities.BulkSmsRequest", b =>
                {
                    b.Navigation("BatchConfig")
                        .IsRequired();

                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
